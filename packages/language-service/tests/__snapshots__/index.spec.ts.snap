// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`inlay hint: inline-handler-leading > C:\\Data\\Workspace\\volar\\test-workspace\\language-service\\inlay-hint\\inline-handler-leading\\entry.vue:6:19 1`] = `
{
  "data": {
    "original": {
      "data": undefined,
    },
    "serviceId": "vue/visualizeHiddenCallbackParam",
    "uri": "file:///c%3A/Data/Workspace/volar/test-workspace/language-service/inlay-hint/inline-handler-leading/entry.vue",
  },
  "kind": 2,
  "label": "$event =>",
  "paddingLeft": undefined,
  "paddingRight": true,
  "position": {
    "character": 18,
    "line": 5,
  },
  "textEdits": undefined,
  "tooltip": {
    "kind": "markdown",
    "value": "\`$event\` is a hidden parameter, you can use it in this callback.

To hide this hint, set \`vue.inlayHints.inlineHandlerLeading\` to \`false\` in IDE settings.

[More info](https://github.com/vuejs/language-tools/issues/2445#issuecomment-1444771420)",
  },
}
`;

exports[`inlay hint: missing-props > C:\\Data\\Workspace\\volar\\test-workspace\\language-service\\inlay-hint\\missing-props\\entry.vue:6:19 1`] = `
{
  "data": {
    "original": {
      "data": undefined,
    },
    "serviceId": "html",
    "uri": "file:///c%3A/Data/Workspace/volar/test-workspace/language-service/inlay-hint/missing-props/entry.vue",
  },
  "kind": 2,
  "label": "foo!",
  "paddingLeft": true,
  "position": {
    "character": 17,
    "line": 5,
  },
  "textEdits": [
    {
      "newText": " :foo=",
      "range": {
        "end": {
          "character": 17,
          "line": 5,
        },
        "start": {
          "character": 17,
          "line": 5,
        },
      },
    },
  ],
}
`;

exports[`inlay hint: option-wrapper > C:\\Data\\Workspace\\volar\\test-workspace\\language-service\\inlay-hint\\option-wrapper\\entry.vue:2:16 1`] = `
{
  "data": {
    "original": {
      "data": undefined,
    },
    "serviceId": "vue/visualizeHiddenCallbackParam",
    "uri": "file:///c%3A/Data/Workspace/volar/test-workspace/language-service/inlay-hint/option-wrapper/entry.vue",
  },
  "kind": 2,
  "label": "(await import('vue')).defineComponent(",
  "paddingLeft": undefined,
  "paddingRight": undefined,
  "position": {
    "character": 15,
    "line": 1,
  },
  "textEdits": undefined,
  "tooltip": {
    "kind": "markdown",
    "value": "This is virtual code that is automatically wrapped for type support, it does not affect your runtime behavior, you can customize it via \`vueCompilerOptions.optionsWrapper\` option in tsconfig / jsconfig.

To hide it, you can set \`\\"vue.inlayHints.optionsWrapper\\": false\` in IDE settings.",
  },
}
`;
